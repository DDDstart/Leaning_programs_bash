#!/bin/bash
# Каждому процессу позволено иметь до девяти открытых ДЕСКРИПТОРОВ файлов
# Оболочка bash резервирует первые три дескриптора с идентификаторами 0, 1 и 2
# 0, STDIN — стандартный поток ввода, как буд-то вводишь с клавиатуры. Можно заменить символами: "<" и "<<"- ввод с замещением и ввод с добавлением
# 1, STDOUT — стандартный поток вывода, вывод на экран. Можно перенаправить в файл: "> test.txt" и ">> test.txt"- вывод с замещением и вывод с добавлением
# 2, STDERR — стандартный поток ошибок, вывод на экран. Можно перенаправить в файл 2> error.txt или на экран 2>1

# Перенаправление потока ошибок
##
ls -l xfile 2> myfile # Ошибки о несуществующем файле запишутся в файл "myfile"

# Перенаправление потоков ошибок и вывода
##
ls -l 04_BASH_Ввод_Вывод_file xfile xxfile 2> errorcontent 1> correctcontent # Ошибки пишутся в файл ошибок, коректный вывод - в другой файл

# Перенаправление STDERR, и STDOUT в один и тот же файл
##
ls -l 04_BASH_Ввод_Вывод_file xfile xxfile &> content # ВСЁ В ФАЙЛ. STDERR, и STDOUT можно перенаправить в один и тот же файл, воспользовавшись командой &>

# Временное перенаправление, или перенаправление вывода одной строки в скриптах
##
echo "Это ошибка" >& 2 # !!! ВЕСЬ ВЫВОД СТРОКИ - В ОШИБКИ, А ОШИБКИ ПО-УМОЛЧАНИЮ, НА ЭКРАН
echo "Это нормальный вывод"

# Временное перенаправление, или перенаправление вывода одной строки в скриптах
##
echo "Это ошибка" >& 2 # ВЕСЬ ВЫВОД СТРОКИ - В ОШИБКИ, А ОШИБКИ ПО-УМОЛЧАНИЮ, НА ЭКРАН
echo "Это нормальный вывод"
# При запуске скрипта можно отдельно вывести ошибки в файл: "./myscript 2> myfile"

# Временное перенаправление, или перенаправление вывода одной строки в скриптах
##
echo "Это ошибка" >& 2> error # !!! ВЕСЬ ВЫВОД СТРОКИ - В ОШИБКИ, А ОШИБКИ В ФАЙЛ
echo "Это нормальный вывод"

# Постоянное перенаправление вывода командой EXEC
# Если в скрипте нужно перенаправлять много выводимых на экран данных, добавлять соответствующую команду к каждому вызову echo неудобно
# Вместо этого можно задать перенаправление вывода в определённый дескриптор на время выполнения скрипта, воспользовавшись командой EXEC
##
exec >& 1> file
echo "Это ошибка"
echo "Это ошибка часть 2"
echo "Это нормальный вывод"
echo "Это нормальный вывод часть 2"

# Или так
##
exec 1> file
echo "Это ошибка"
echo "Это ошибка часть 2"
echo "Это нормальный вывод"
echo "Это нормальный вывод часть 2"

# Команду exec можно использовать не только в начале скрипта, но и в других местах:
## 
exec 2> my_error_file
echo "Это ошибка" # Выводит строку в STDOUT на экран
echo "Это ошибка часть 2" # Выводит строку в STDOUT на экран
exec 1> my_file # Все, что идет в STDOUT выводится в файл
echo "Это нормальный вывод" # Выводит строку в файл my_file
echo "Это нормальный вывод часть 2" >& 2 # Выводит строку в дескриптор STDERR, а он, по первой строке программы, пишет в файл

# Перенаправление ввода в скриптах
##

# Заглушить вывод
##
ls -l 04_BASH_Ввод_Вывод_file xfile xxfile >& /dev/null # Заглушить вывод всего
ls -l 04_BASH_Ввод_Вывод_file xfile xxfile 1> /dev/null # Заглушить вывод результата программы
ls -l 04_BASH_Ввод_Вывод_file xfile xxfile 2> /dev/null # Заглушить вывод ошибок

